/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.keyhole.dbroot.EndSnippetProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto');
goog.provide('proto.keyhole.dbroot.EndSnippetProto.StarDataProto');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.keyhole.dbroot.AutopiaOptionsProto');
goog.require('proto.keyhole.dbroot.CSIOptionsProto');
goog.require('proto.keyhole.dbroot.ClientOptionsProto');
goog.require('proto.keyhole.dbroot.CobrandProto');
goog.require('proto.keyhole.dbroot.ConfigScriptProto');
goog.require('proto.keyhole.dbroot.DatabaseDescriptionProto');
goog.require('proto.keyhole.dbroot.FetchingOptionsProto');
goog.require('proto.keyhole.dbroot.LogServerProto');
goog.require('proto.keyhole.dbroot.MfeDomainFeaturesProto');
goog.require('proto.keyhole.dbroot.PlanetModelProto');
goog.require('proto.keyhole.dbroot.PlanetaryDatabaseProto');
goog.require('proto.keyhole.dbroot.PostingServerProto');
goog.require('proto.keyhole.dbroot.RequirementProto');
goog.require('proto.keyhole.dbroot.SearchTabProto');
goog.require('proto.keyhole.dbroot.StringIdOrValueProto');
goog.require('proto.keyhole.dbroot.SwoopParamsProto');
goog.require('proto.keyhole.dbroot.TimeMachineOptionsProto');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.keyhole.dbroot.EndSnippetProto.repeatedFields_, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.keyhole.dbroot.EndSnippetProto.repeatedFields_ = [4,34,35,36,37,42,62];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    model: (f = msg.getModel()) && proto.keyhole.dbroot.PlanetModelProto.toObject(includeInstance, f),
    authServerUrl: (f = msg.getAuthServerUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    disableAuthentication: jspb.Message.getField(msg, 3),
    mfeDomainsList: jspb.Message.toObjectList(msg.getMfeDomainsList(),
    proto.keyhole.dbroot.MfeDomainFeaturesProto.toObject, includeInstance),
    mfeLangParam: jspb.Message.getFieldWithDefault(msg, 5, "hl\x3d$[hl]"),
    adsUrlPatterns: jspb.Message.getField(msg, 6),
    reverseGeocoderUrl: (f = msg.getReverseGeocoderUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    reverseGeocoderProtocolVersion: jspb.Message.getFieldWithDefault(msg, 8, 3),
    skyDatabaseIsAvailable: jspb.Message.getFieldWithDefault(msg, 9, true),
    skyDatabaseUrl: (f = msg.getSkyDatabaseUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    defaultWebPageIntlUrl: (f = msg.getDefaultWebPageIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    numStartUpTips: jspb.Message.getFieldWithDefault(msg, 12, 17),
    startUpTipsUrl: (f = msg.getStartUpTipsUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    numProStartUpTips: jspb.Message.getField(msg, 51),
    proStartUpTipsUrl: (f = msg.getProStartUpTipsUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    startupTipsIntlUrl: (f = msg.getStartupTipsIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    userGuideIntlUrl: (f = msg.getUserGuideIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    supportCenterIntlUrl: (f = msg.getSupportCenterIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    businessListingIntlUrl: (f = msg.getBusinessListingIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    supportAnswerIntlUrl: (f = msg.getSupportAnswerIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    supportTopicIntlUrl: (f = msg.getSupportTopicIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    supportRequestIntlUrl: (f = msg.getSupportRequestIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    earthIntlUrl: (f = msg.getEarthIntlUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    addContentUrl: (f = msg.getAddContentUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    sketchupNotInstalledUrl: (f = msg.getSketchupNotInstalledUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    sketchupErrorUrl: (f = msg.getSketchupErrorUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    freeLicenseUrl: (f = msg.getFreeLicenseUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    proLicenseUrl: (f = msg.getProLicenseUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    tutorialUrl: (f = msg.getTutorialUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    keyboardShortcutsUrl: (f = msg.getKeyboardShortcutsUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    releaseNotesUrl: (f = msg.getReleaseNotesUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    hideUserData: jspb.Message.getFieldWithDefault(msg, 26, false),
    useGeLogo: jspb.Message.getFieldWithDefault(msg, 27, true),
    dioramaDescriptionUrlBase: (f = msg.getDioramaDescriptionUrlBase()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    dioramaDefaultColor: jspb.Message.getFieldWithDefault(msg, 29, -3685689),
    dioramaBlacklistUrl: (f = msg.getDioramaBlacklistUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    clientOptions: (f = msg.getClientOptions()) && proto.keyhole.dbroot.ClientOptionsProto.toObject(includeInstance, f),
    fetchingOptions: (f = msg.getFetchingOptions()) && proto.keyhole.dbroot.FetchingOptionsProto.toObject(includeInstance, f),
    timeMachineOptions: (f = msg.getTimeMachineOptions()) && proto.keyhole.dbroot.TimeMachineOptionsProto.toObject(includeInstance, f),
    csiOptions: (f = msg.getCsiOptions()) && proto.keyhole.dbroot.CSIOptionsProto.toObject(includeInstance, f),
    searchTabList: jspb.Message.toObjectList(msg.getSearchTabList(),
    proto.keyhole.dbroot.SearchTabProto.toObject, includeInstance),
    cobrandInfoList: jspb.Message.toObjectList(msg.getCobrandInfoList(),
    proto.keyhole.dbroot.CobrandProto.toObject, includeInstance),
    validDatabaseList: jspb.Message.toObjectList(msg.getValidDatabaseList(),
    proto.keyhole.dbroot.DatabaseDescriptionProto.toObject, includeInstance),
    configScriptList: jspb.Message.toObjectList(msg.getConfigScriptList(),
    proto.keyhole.dbroot.ConfigScriptProto.toObject, includeInstance),
    deauthServerUrl: (f = msg.getDeauthServerUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    swoopParameters: (f = msg.getSwoopParameters()) && proto.keyhole.dbroot.SwoopParamsProto.toObject(includeInstance, f),
    bbsServerInfo: (f = msg.getBbsServerInfo()) && proto.keyhole.dbroot.PostingServerProto.toObject(includeInstance, f),
    dataErrorServerInfo: (f = msg.getDataErrorServerInfo()) && proto.keyhole.dbroot.PostingServerProto.toObject(includeInstance, f),
    planetaryDatabaseList: jspb.Message.toObjectList(msg.getPlanetaryDatabaseList(),
    proto.keyhole.dbroot.PlanetaryDatabaseProto.toObject, includeInstance),
    logServer: (f = msg.getLogServer()) && proto.keyhole.dbroot.LogServerProto.toObject(includeInstance, f),
    autopiaOptions: (f = msg.getAutopiaOptions()) && proto.keyhole.dbroot.AutopiaOptionsProto.toObject(includeInstance, f),
    searchConfig: (f = msg.getSearchConfig()) && proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.toObject(includeInstance, f),
    searchInfo: (f = msg.getSearchInfo()) && proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.toObject(includeInstance, f),
    elevationServiceBaseUrl: jspb.Message.getFieldWithDefault(msg, 46, "http://maps.google.com/maps/api/elevation/"),
    elevationProfileQueryDelay: jspb.Message.getFieldWithDefault(msg, 47, 500),
    proUpgradeUrl: (f = msg.getProUpgradeUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    earthCommunityUrl: (f = msg.getEarthCommunityUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    googleMapsUrl: (f = msg.getGoogleMapsUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    sharingUrl: (f = msg.getSharingUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    privacyPolicyUrl: (f = msg.getPrivacyPolicyUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    doGplusUserCheck: jspb.Message.getFieldWithDefault(msg, 60, false),
    rocktreeDataProto: (f = msg.getRocktreeDataProto()) && proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.toObject(includeInstance, f),
    filmstripConfigList: jspb.Message.toObjectList(msg.getFilmstripConfigList(),
    proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.toObject, includeInstance),
    showSigninButton: jspb.Message.getField(msg, 63),
    proMeasureUpsellUrl: (f = msg.getProMeasureUpsellUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    proPrintUpsellUrl: (f = msg.getProPrintUpsellUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    starDataProto: (f = msg.getStarDataProto()) && proto.keyhole.dbroot.EndSnippetProto.StarDataProto.toObject(includeInstance, f),
    feedbackUrl: (f = msg.getFeedbackUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    oauth2LoginUrl: (f = msg.getOauth2LoginUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto}
 */
proto.keyhole.dbroot.EndSnippetProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto;
  return proto.keyhole.dbroot.EndSnippetProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto}
 */
proto.keyhole.dbroot.EndSnippetProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.PlanetModelProto;
      reader.readMessage(value,proto.keyhole.dbroot.PlanetModelProto.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setAuthServerUrl(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableAuthentication(value);
      break;
    case 4:
      var value = new proto.keyhole.dbroot.MfeDomainFeaturesProto;
      reader.readMessage(value,proto.keyhole.dbroot.MfeDomainFeaturesProto.deserializeBinaryFromReader);
      msg.addMfeDomains(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMfeLangParam(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdsUrlPatterns(value);
      break;
    case 7:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setReverseGeocoderUrl(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReverseGeocoderProtocolVersion(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkyDatabaseIsAvailable(value);
      break;
    case 10:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSkyDatabaseUrl(value);
      break;
    case 11:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setDefaultWebPageIntlUrl(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumStartUpTips(value);
      break;
    case 13:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setStartUpTipsUrl(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumProStartUpTips(value);
      break;
    case 52:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setProStartUpTipsUrl(value);
      break;
    case 64:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setStartupTipsIntlUrl(value);
      break;
    case 14:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setUserGuideIntlUrl(value);
      break;
    case 15:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSupportCenterIntlUrl(value);
      break;
    case 16:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setBusinessListingIntlUrl(value);
      break;
    case 17:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSupportAnswerIntlUrl(value);
      break;
    case 18:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSupportTopicIntlUrl(value);
      break;
    case 19:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSupportRequestIntlUrl(value);
      break;
    case 20:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setEarthIntlUrl(value);
      break;
    case 21:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setAddContentUrl(value);
      break;
    case 22:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSketchupNotInstalledUrl(value);
      break;
    case 23:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSketchupErrorUrl(value);
      break;
    case 24:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setFreeLicenseUrl(value);
      break;
    case 25:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setProLicenseUrl(value);
      break;
    case 48:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setTutorialUrl(value);
      break;
    case 49:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setKeyboardShortcutsUrl(value);
      break;
    case 50:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setReleaseNotesUrl(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHideUserData(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseGeLogo(value);
      break;
    case 28:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setDioramaDescriptionUrlBase(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDioramaDefaultColor(value);
      break;
    case 53:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setDioramaBlacklistUrl(value);
      break;
    case 30:
      var value = new proto.keyhole.dbroot.ClientOptionsProto;
      reader.readMessage(value,proto.keyhole.dbroot.ClientOptionsProto.deserializeBinaryFromReader);
      msg.setClientOptions(value);
      break;
    case 31:
      var value = new proto.keyhole.dbroot.FetchingOptionsProto;
      reader.readMessage(value,proto.keyhole.dbroot.FetchingOptionsProto.deserializeBinaryFromReader);
      msg.setFetchingOptions(value);
      break;
    case 32:
      var value = new proto.keyhole.dbroot.TimeMachineOptionsProto;
      reader.readMessage(value,proto.keyhole.dbroot.TimeMachineOptionsProto.deserializeBinaryFromReader);
      msg.setTimeMachineOptions(value);
      break;
    case 33:
      var value = new proto.keyhole.dbroot.CSIOptionsProto;
      reader.readMessage(value,proto.keyhole.dbroot.CSIOptionsProto.deserializeBinaryFromReader);
      msg.setCsiOptions(value);
      break;
    case 34:
      var value = new proto.keyhole.dbroot.SearchTabProto;
      reader.readMessage(value,proto.keyhole.dbroot.SearchTabProto.deserializeBinaryFromReader);
      msg.addSearchTab(value);
      break;
    case 35:
      var value = new proto.keyhole.dbroot.CobrandProto;
      reader.readMessage(value,proto.keyhole.dbroot.CobrandProto.deserializeBinaryFromReader);
      msg.addCobrandInfo(value);
      break;
    case 36:
      var value = new proto.keyhole.dbroot.DatabaseDescriptionProto;
      reader.readMessage(value,proto.keyhole.dbroot.DatabaseDescriptionProto.deserializeBinaryFromReader);
      msg.addValidDatabase(value);
      break;
    case 37:
      var value = new proto.keyhole.dbroot.ConfigScriptProto;
      reader.readMessage(value,proto.keyhole.dbroot.ConfigScriptProto.deserializeBinaryFromReader);
      msg.addConfigScript(value);
      break;
    case 38:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setDeauthServerUrl(value);
      break;
    case 39:
      var value = new proto.keyhole.dbroot.SwoopParamsProto;
      reader.readMessage(value,proto.keyhole.dbroot.SwoopParamsProto.deserializeBinaryFromReader);
      msg.setSwoopParameters(value);
      break;
    case 40:
      var value = new proto.keyhole.dbroot.PostingServerProto;
      reader.readMessage(value,proto.keyhole.dbroot.PostingServerProto.deserializeBinaryFromReader);
      msg.setBbsServerInfo(value);
      break;
    case 41:
      var value = new proto.keyhole.dbroot.PostingServerProto;
      reader.readMessage(value,proto.keyhole.dbroot.PostingServerProto.deserializeBinaryFromReader);
      msg.setDataErrorServerInfo(value);
      break;
    case 42:
      var value = new proto.keyhole.dbroot.PlanetaryDatabaseProto;
      reader.readMessage(value,proto.keyhole.dbroot.PlanetaryDatabaseProto.deserializeBinaryFromReader);
      msg.addPlanetaryDatabase(value);
      break;
    case 43:
      var value = new proto.keyhole.dbroot.LogServerProto;
      reader.readMessage(value,proto.keyhole.dbroot.LogServerProto.deserializeBinaryFromReader);
      msg.setLogServer(value);
      break;
    case 44:
      var value = new proto.keyhole.dbroot.AutopiaOptionsProto;
      reader.readMessage(value,proto.keyhole.dbroot.AutopiaOptionsProto.deserializeBinaryFromReader);
      msg.setAutopiaOptions(value);
      break;
    case 54:
      var value = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.deserializeBinaryFromReader);
      msg.setSearchConfig(value);
      break;
    case 45:
      var value = new proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.deserializeBinaryFromReader);
      msg.setSearchInfo(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setElevationServiceBaseUrl(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElevationProfileQueryDelay(value);
      break;
    case 55:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setProUpgradeUrl(value);
      break;
    case 56:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setEarthCommunityUrl(value);
      break;
    case 57:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setGoogleMapsUrl(value);
      break;
    case 58:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSharingUrl(value);
      break;
    case 59:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setPrivacyPolicyUrl(value);
      break;
    case 60:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoGplusUserCheck(value);
      break;
    case 61:
      var value = new proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.deserializeBinaryFromReader);
      msg.setRocktreeDataProto(value);
      break;
    case 62:
      var value = new proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.deserializeBinaryFromReader);
      msg.addFilmstripConfig(value);
      break;
    case 63:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowSigninButton(value);
      break;
    case 65:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setProMeasureUpsellUrl(value);
      break;
    case 66:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setProPrintUpsellUrl(value);
      break;
    case 67:
      var value = new proto.keyhole.dbroot.EndSnippetProto.StarDataProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.StarDataProto.deserializeBinaryFromReader);
      msg.setStarDataProto(value);
      break;
    case 68:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setFeedbackUrl(value);
      break;
    case 69:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setOauth2LoginUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.PlanetModelProto.serializeBinaryToWriter
    );
  }
  f = message.getAuthServerUrl();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMfeDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.keyhole.dbroot.MfeDomainFeaturesProto.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReverseGeocoderUrl();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSkyDatabaseUrl();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getDefaultWebPageIntlUrl();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getStartUpTipsUrl();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 51));
  if (f != null) {
    writer.writeInt32(
      51,
      f
    );
  }
  f = message.getProStartUpTipsUrl();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getStartupTipsIntlUrl();
  if (f != null) {
    writer.writeMessage(
      64,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getUserGuideIntlUrl();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSupportCenterIntlUrl();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getBusinessListingIntlUrl();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSupportAnswerIntlUrl();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSupportTopicIntlUrl();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSupportRequestIntlUrl();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getEarthIntlUrl();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getAddContentUrl();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSketchupNotInstalledUrl();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSketchupErrorUrl();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getFreeLicenseUrl();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getProLicenseUrl();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getTutorialUrl();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getKeyboardShortcutsUrl();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getReleaseNotesUrl();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getDioramaDescriptionUrlBase();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = message.getDioramaBlacklistUrl();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getClientOptions();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.keyhole.dbroot.ClientOptionsProto.serializeBinaryToWriter
    );
  }
  f = message.getFetchingOptions();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.keyhole.dbroot.FetchingOptionsProto.serializeBinaryToWriter
    );
  }
  f = message.getTimeMachineOptions();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.keyhole.dbroot.TimeMachineOptionsProto.serializeBinaryToWriter
    );
  }
  f = message.getCsiOptions();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.keyhole.dbroot.CSIOptionsProto.serializeBinaryToWriter
    );
  }
  f = message.getSearchTabList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      34,
      f,
      proto.keyhole.dbroot.SearchTabProto.serializeBinaryToWriter
    );
  }
  f = message.getCobrandInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      35,
      f,
      proto.keyhole.dbroot.CobrandProto.serializeBinaryToWriter
    );
  }
  f = message.getValidDatabaseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      36,
      f,
      proto.keyhole.dbroot.DatabaseDescriptionProto.serializeBinaryToWriter
    );
  }
  f = message.getConfigScriptList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      37,
      f,
      proto.keyhole.dbroot.ConfigScriptProto.serializeBinaryToWriter
    );
  }
  f = message.getDeauthServerUrl();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSwoopParameters();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.keyhole.dbroot.SwoopParamsProto.serializeBinaryToWriter
    );
  }
  f = message.getBbsServerInfo();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.keyhole.dbroot.PostingServerProto.serializeBinaryToWriter
    );
  }
  f = message.getDataErrorServerInfo();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.keyhole.dbroot.PostingServerProto.serializeBinaryToWriter
    );
  }
  f = message.getPlanetaryDatabaseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      42,
      f,
      proto.keyhole.dbroot.PlanetaryDatabaseProto.serializeBinaryToWriter
    );
  }
  f = message.getLogServer();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.keyhole.dbroot.LogServerProto.serializeBinaryToWriter
    );
  }
  f = message.getAutopiaOptions();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.keyhole.dbroot.AutopiaOptionsProto.serializeBinaryToWriter
    );
  }
  f = message.getSearchConfig();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.serializeBinaryToWriter
    );
  }
  f = message.getSearchInfo();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeString(
      46,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeInt32(
      47,
      f
    );
  }
  f = message.getProUpgradeUrl();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getEarthCommunityUrl();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getGoogleMapsUrl();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSharingUrl();
  if (f != null) {
    writer.writeMessage(
      58,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getPrivacyPolicyUrl();
  if (f != null) {
    writer.writeMessage(
      59,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeBool(
      60,
      f
    );
  }
  f = message.getRocktreeDataProto();
  if (f != null) {
    writer.writeMessage(
      61,
      f,
      proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.serializeBinaryToWriter
    );
  }
  f = message.getFilmstripConfigList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      62,
      f,
      proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeBool(
      63,
      f
    );
  }
  f = message.getProMeasureUpsellUrl();
  if (f != null) {
    writer.writeMessage(
      65,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getProPrintUpsellUrl();
  if (f != null) {
    writer.writeMessage(
      66,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getStarDataProto();
  if (f != null) {
    writer.writeMessage(
      67,
      f,
      proto.keyhole.dbroot.EndSnippetProto.StarDataProto.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackUrl();
  if (f != null) {
    writer.writeMessage(
      68,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getOauth2LoginUrl();
  if (f != null) {
    writer.writeMessage(
      69,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.repeatedFields_, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchServerList: jspb.Message.toObjectList(msg.getSearchServerList(),
    proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.toObject, includeInstance),
    oneboxServiceList: jspb.Message.toObjectList(msg.getOneboxServiceList(),
    proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.toObject, includeInstance),
    kmlSearchUrl: (f = msg.getKmlSearchUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    kmlRenderUrl: (f = msg.getKmlRenderUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    searchHistoryUrl: (f = msg.getSearchHistoryUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    errorPageUrl: (f = msg.getErrorPageUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto;
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.deserializeBinaryFromReader);
      msg.addSearchServer(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.deserializeBinaryFromReader);
      msg.addOneboxService(value);
      break;
    case 3:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setKmlSearchUrl(value);
      break;
    case 4:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setKmlRenderUrl(value);
      break;
    case 6:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSearchHistoryUrl(value);
      break;
    case 5:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setErrorPageUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchServerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.serializeBinaryToWriter
    );
  }
  f = message.getOneboxServiceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.serializeBinaryToWriter
    );
  }
  f = message.getKmlSearchUrl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getKmlRenderUrl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSearchHistoryUrl();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getErrorPageUrl();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.repeatedFields_, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.displayName = 'proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.repeatedFields_ = [9,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    url: (f = msg.getUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    htmlTransformUrl: (f = msg.getHtmlTransformUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    kmlTransformUrl: (f = msg.getKmlTransformUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    supplementalUi: (f = msg.getSupplementalUi()) && proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.toObject(includeInstance, f),
    suggestionList: jspb.Message.toObjectList(msg.getSuggestionList(),
    proto.keyhole.dbroot.StringIdOrValueProto.toObject, includeInstance),
    searchletList: jspb.Message.toObjectList(msg.getSearchletList(),
    proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.toObject, includeInstance),
    requirements: (f = msg.getRequirements()) && proto.keyhole.dbroot.RequirementProto.toObject(includeInstance, f),
    suggestServer: (f = msg.getSuggestServer()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer;
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setHtmlTransformUrl(value);
      break;
    case 5:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setKmlTransformUrl(value);
      break;
    case 6:
      var value = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.deserializeBinaryFromReader);
      msg.setSupplementalUi(value);
      break;
    case 9:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.addSuggestion(value);
      break;
    case 7:
      var value = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.deserializeBinaryFromReader);
      msg.addSearchlet(value);
      break;
    case 8:
      var value = new proto.keyhole.dbroot.RequirementProto;
      reader.readMessage(value,proto.keyhole.dbroot.RequirementProto.deserializeBinaryFromReader);
      msg.setRequirements(value);
      break;
    case 10:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setSuggestServer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getHtmlTransformUrl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getKmlTransformUrl();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSupplementalUi();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.serializeBinaryToWriter
    );
  }
  f = message.getSuggestionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getSearchletList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.serializeBinaryToWriter
    );
  }
  f = message.getRequirements();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.keyhole.dbroot.RequirementProto.serializeBinaryToWriter
    );
  }
  f = message.getSuggestServer();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType = {
  RESULT_TYPE_KML: 0,
  RESULT_TYPE_XML: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.displayName = 'proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = msg.getUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    label: (f = msg.getLabel()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    height: jspb.Message.getFieldWithDefault(msg, 3, 160)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi;
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getLabel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional StringIdOrValueProto url = 1;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.getUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 1));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringIdOrValueProto label = 2;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.getLabel = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 2));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.setLabel = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.clearLabel = function() {
  this.setLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 height = 3;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 160));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.setHeight = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.clearHeight = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = msg.getUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    requirements: (f = msg.getRequirements()) && proto.keyhole.dbroot.RequirementProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto;
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new proto.keyhole.dbroot.RequirementProto;
      reader.readMessage(value,proto.keyhole.dbroot.RequirementProto.deserializeBinaryFromReader);
      msg.setRequirements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getRequirements();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.keyhole.dbroot.RequirementProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional StringIdOrValueProto url = 1;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.getUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 1));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringIdOrValueProto name = 2;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.getName = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 2));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequirementProto requirements = 3;
 * @return {?proto.keyhole.dbroot.RequirementProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.getRequirements = function() {
  return /** @type{?proto.keyhole.dbroot.RequirementProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.RequirementProto, 3));
};


/** @param {?proto.keyhole.dbroot.RequirementProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.setRequirements = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.clearRequirements = function() {
  this.setRequirements(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto.prototype.hasRequirements = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringIdOrValueProto name = 1;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getName = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 1));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringIdOrValueProto url = 2;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 2));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResultType type = 3;
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getType = function() {
  return /** @type {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.ResultType} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearType = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringIdOrValueProto html_transform_url = 4;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getHtmlTransformUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 4));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setHtmlTransformUrl = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearHtmlTransformUrl = function() {
  this.setHtmlTransformUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasHtmlTransformUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringIdOrValueProto kml_transform_url = 5;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getKmlTransformUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 5));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setKmlTransformUrl = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearKmlTransformUrl = function() {
  this.setKmlTransformUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasKmlTransformUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SupplementalUi supplemental_ui = 6;
 * @return {?proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getSupplementalUi = function() {
  return /** @type{?proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi, 6));
};


/** @param {?proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SupplementalUi|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setSupplementalUi = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearSupplementalUi = function() {
  this.setSupplementalUi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasSupplementalUi = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated StringIdOrValueProto suggestion = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.StringIdOrValueProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getSuggestionList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.StringIdOrValueProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 9));
};


/** @param {!Array.<!proto.keyhole.dbroot.StringIdOrValueProto>} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setSuggestionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.keyhole.dbroot.StringIdOrValueProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.addSuggestion = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.keyhole.dbroot.StringIdOrValueProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearSuggestionList = function() {
  this.setSuggestionList([]);
};


/**
 * repeated SearchletProto searchlet = 7;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getSearchletList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto, 7));
};


/** @param {!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto>} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setSearchletList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.addSearchlet = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.SearchletProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearSearchletList = function() {
  this.setSearchletList([]);
};


/**
 * optional RequirementProto requirements = 8;
 * @return {?proto.keyhole.dbroot.RequirementProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getRequirements = function() {
  return /** @type{?proto.keyhole.dbroot.RequirementProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.RequirementProto, 8));
};


/** @param {?proto.keyhole.dbroot.RequirementProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setRequirements = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearRequirements = function() {
  this.setRequirements(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasRequirements = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional StringIdOrValueProto suggest_server = 10;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.getSuggestServer = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 10));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.setSuggestServer = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.clearSuggestServer = function() {
  this.setSuggestServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer.prototype.hasSuggestServer = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceUrl: (f = msg.getServiceUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    requirements: (f = msg.getRequirements()) && proto.keyhole.dbroot.RequirementProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto;
  return proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setServiceUrl(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.RequirementProto;
      reader.readMessage(value,proto.keyhole.dbroot.RequirementProto.deserializeBinaryFromReader);
      msg.setRequirements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceUrl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getRequirements();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.keyhole.dbroot.RequirementProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional StringIdOrValueProto service_url = 1;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.getServiceUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 1));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.setServiceUrl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.clearServiceUrl = function() {
  this.setServiceUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.hasServiceUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequirementProto requirements = 2;
 * @return {?proto.keyhole.dbroot.RequirementProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.getRequirements = function() {
  return /** @type{?proto.keyhole.dbroot.RequirementProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.RequirementProto, 2));
};


/** @param {?proto.keyhole.dbroot.RequirementProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.setRequirements = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.clearRequirements = function() {
  this.setRequirements(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto.prototype.hasRequirements = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SearchServer search_server = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer>}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.getSearchServerList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer, 1));
};


/** @param {!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer>} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.setSearchServerList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.addSearchServer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.SearchServer, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.clearSearchServerList = function() {
  this.setSearchServerList([]);
};


/**
 * repeated OneboxServiceProto onebox_service = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.getOneboxServiceList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto, 2));
};


/** @param {!Array.<!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto>} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.setOneboxServiceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.addOneboxService = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.OneboxServiceProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.clearOneboxServiceList = function() {
  this.setOneboxServiceList([]);
};


/**
 * optional StringIdOrValueProto kml_search_url = 3;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.getKmlSearchUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 3));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.setKmlSearchUrl = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.clearKmlSearchUrl = function() {
  this.setKmlSearchUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.hasKmlSearchUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringIdOrValueProto kml_render_url = 4;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.getKmlRenderUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 4));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.setKmlRenderUrl = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.clearKmlRenderUrl = function() {
  this.setKmlRenderUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.hasKmlRenderUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringIdOrValueProto search_history_url = 6;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.getSearchHistoryUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 6));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.setSearchHistoryUrl = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.clearSearchHistoryUrl = function() {
  this.setSearchHistoryUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.hasSearchHistoryUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional StringIdOrValueProto error_page_url = 5;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.getErrorPageUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 5));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.setErrorPageUrl = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.clearErrorPageUrl = function() {
  this.setErrorPageUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto.prototype.hasErrorPageUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultUrl: jspb.Message.getFieldWithDefault(msg, 1, "http://maps.google.com/maps"),
    geocodeParam: jspb.Message.getFieldWithDefault(msg, 2, "q")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto;
  return proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeocodeParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string default_url = 1;
 * @return {string}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.getDefaultUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "http://maps.google.com/maps"));
};


/** @param {string} value */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.setDefaultUrl = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.clearDefaultUrl = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.hasDefaultUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string geocode_param = 2;
 * @return {string}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.getGeocodeParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "q"));
};


/** @param {string} value */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.setGeocodeParam = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.clearGeocodeParam = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto.prototype.hasGeocodeParam = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = msg.getUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto;
  return proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional StringIdOrValueProto url = 1;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.prototype.getUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 1));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.repeatedFields_, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    requirements: (f = msg.getRequirements()) && proto.keyhole.dbroot.RequirementProto.toObject(includeInstance, f),
    alleycatUrlTemplate: (f = msg.getAlleycatUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    fallbackAlleycatUrlTemplate: (f = msg.getFallbackAlleycatUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    metadataUrlTemplate: (f = msg.getMetadataUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    thumbnailUrlTemplate: (f = msg.getThumbnailUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    kmlUrlTemplate: (f = msg.getKmlUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    featuredToursUrl: (f = msg.getFeaturedToursUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    enableViewportFallback: jspb.Message.getField(msg, 7),
    viewportFallbackDistance: jspb.Message.getField(msg, 8),
    imageryTypeList: jspb.Message.toObjectList(msg.getImageryTypeList(),
    proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto;
  return proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.RequirementProto;
      reader.readMessage(value,proto.keyhole.dbroot.RequirementProto.deserializeBinaryFromReader);
      msg.setRequirements(value);
      break;
    case 2:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setAlleycatUrlTemplate(value);
      break;
    case 9:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setFallbackAlleycatUrlTemplate(value);
      break;
    case 3:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setMetadataUrlTemplate(value);
      break;
    case 4:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setThumbnailUrlTemplate(value);
      break;
    case 5:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setKmlUrlTemplate(value);
      break;
    case 6:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setFeaturedToursUrl(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableViewportFallback(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setViewportFallbackDistance(value);
      break;
    case 10:
      var value = new proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto;
      reader.readMessage(value,proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.deserializeBinaryFromReader);
      msg.addImageryType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequirements();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.RequirementProto.serializeBinaryToWriter
    );
  }
  f = message.getAlleycatUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getFallbackAlleycatUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getMetadataUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getThumbnailUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getKmlUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getFeaturedToursUrl();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getImageryTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageryTypeId: jspb.Message.getField(msg, 1),
    imageryTypeLabel: jspb.Message.getField(msg, 2),
    metadataUrlTemplate: (f = msg.getMetadataUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    thumbnailUrlTemplate: (f = msg.getThumbnailUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f),
    kmlUrlTemplate: (f = msg.getKmlUrlTemplate()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto;
  return proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageryTypeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageryTypeLabel(value);
      break;
    case 3:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setMetadataUrlTemplate(value);
      break;
    case 4:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setThumbnailUrlTemplate(value);
      break;
    case 5:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setKmlUrlTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadataUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getThumbnailUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
  f = message.getKmlUrlTemplate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 imagery_type_id = 1;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.getImageryTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.setImageryTypeId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.clearImageryTypeId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.hasImageryTypeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string imagery_type_label = 2;
 * @return {string}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.getImageryTypeLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.setImageryTypeLabel = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.clearImageryTypeLabel = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.hasImageryTypeLabel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StringIdOrValueProto metadata_url_template = 3;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.getMetadataUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 3));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.setMetadataUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.clearMetadataUrlTemplate = function() {
  this.setMetadataUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.hasMetadataUrlTemplate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringIdOrValueProto thumbnail_url_template = 4;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.getThumbnailUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 4));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.setThumbnailUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.clearThumbnailUrlTemplate = function() {
  this.setThumbnailUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.hasThumbnailUrlTemplate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringIdOrValueProto kml_url_template = 5;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.getKmlUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 5));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.setKmlUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.clearKmlUrlTemplate = function() {
  this.setKmlUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto.prototype.hasKmlUrlTemplate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RequirementProto requirements = 1;
 * @return {?proto.keyhole.dbroot.RequirementProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getRequirements = function() {
  return /** @type{?proto.keyhole.dbroot.RequirementProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.RequirementProto, 1));
};


/** @param {?proto.keyhole.dbroot.RequirementProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setRequirements = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearRequirements = function() {
  this.setRequirements(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasRequirements = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringIdOrValueProto alleycat_url_template = 2;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getAlleycatUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 2));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setAlleycatUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearAlleycatUrlTemplate = function() {
  this.setAlleycatUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasAlleycatUrlTemplate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StringIdOrValueProto fallback_alleycat_url_template = 9;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getFallbackAlleycatUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 9));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setFallbackAlleycatUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearFallbackAlleycatUrlTemplate = function() {
  this.setFallbackAlleycatUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasFallbackAlleycatUrlTemplate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional StringIdOrValueProto metadata_url_template = 3;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getMetadataUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 3));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setMetadataUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearMetadataUrlTemplate = function() {
  this.setMetadataUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasMetadataUrlTemplate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringIdOrValueProto thumbnail_url_template = 4;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getThumbnailUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 4));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setThumbnailUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearThumbnailUrlTemplate = function() {
  this.setThumbnailUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasThumbnailUrlTemplate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringIdOrValueProto kml_url_template = 5;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getKmlUrlTemplate = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 5));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setKmlUrlTemplate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearKmlUrlTemplate = function() {
  this.setKmlUrlTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasKmlUrlTemplate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional StringIdOrValueProto featured_tours_url = 6;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getFeaturedToursUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 6));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setFeaturedToursUrl = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearFeaturedToursUrl = function() {
  this.setFeaturedToursUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasFeaturedToursUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool enable_viewport_fallback = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getEnableViewportFallback = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setEnableViewportFallback = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearEnableViewportFallback = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasEnableViewportFallback = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 viewport_fallback_distance = 8;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getViewportFallbackDistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setViewportFallbackDistance = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearViewportFallbackDistance = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.hasViewportFallbackDistance = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated AlleycatImageryTypeProto imagery_type = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.getImageryTypeList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto, 10));
};


/** @param {!Array.<!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto>} value */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.setImageryTypeList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto}
 */
proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.addImageryType = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.AlleycatImageryTypeProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto.prototype.clearImageryTypeList = function() {
  this.setImageryTypeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.keyhole.dbroot.EndSnippetProto.StarDataProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.keyhole.dbroot.EndSnippetProto.StarDataProto.displayName = 'proto.keyhole.dbroot.EndSnippetProto.StarDataProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.prototype.toObject = function(opt_includeInstance) {
  return proto.keyhole.dbroot.EndSnippetProto.StarDataProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.keyhole.dbroot.EndSnippetProto.StarDataProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = msg.getUrl()) && proto.keyhole.dbroot.StringIdOrValueProto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.StarDataProto}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.keyhole.dbroot.EndSnippetProto.StarDataProto;
  return proto.keyhole.dbroot.EndSnippetProto.StarDataProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.StarDataProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.keyhole.dbroot.EndSnippetProto.StarDataProto}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.keyhole.dbroot.StringIdOrValueProto;
      reader.readMessage(value,proto.keyhole.dbroot.StringIdOrValueProto.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.keyhole.dbroot.EndSnippetProto.StarDataProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.keyhole.dbroot.EndSnippetProto.StarDataProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.keyhole.dbroot.StringIdOrValueProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional StringIdOrValueProto url = 1;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.prototype.getUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 1));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.StarDataProto.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.StarDataProto.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlanetModelProto model = 1;
 * @return {?proto.keyhole.dbroot.PlanetModelProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getModel = function() {
  return /** @type{?proto.keyhole.dbroot.PlanetModelProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.PlanetModelProto, 1));
};


/** @param {?proto.keyhole.dbroot.PlanetModelProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setModel = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearModel = function() {
  this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasModel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringIdOrValueProto auth_server_url = 2;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getAuthServerUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 2));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setAuthServerUrl = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearAuthServerUrl = function() {
  this.setAuthServerUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasAuthServerUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool disable_authentication = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDisableAuthentication = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDisableAuthentication = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDisableAuthentication = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDisableAuthentication = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated MfeDomainFeaturesProto mfe_domains = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.MfeDomainFeaturesProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getMfeDomainsList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.MfeDomainFeaturesProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.MfeDomainFeaturesProto, 4));
};


/** @param {!Array.<!proto.keyhole.dbroot.MfeDomainFeaturesProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setMfeDomainsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.keyhole.dbroot.MfeDomainFeaturesProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.MfeDomainFeaturesProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addMfeDomains = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.keyhole.dbroot.MfeDomainFeaturesProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearMfeDomainsList = function() {
  this.setMfeDomainsList([]);
};


/**
 * optional string mfe_lang_param = 5;
 * @return {string}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getMfeLangParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, "hl\x3d$[hl]"));
};


/** @param {string} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setMfeLangParam = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearMfeLangParam = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasMfeLangParam = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ads_url_patterns = 6;
 * @return {string}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getAdsUrlPatterns = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setAdsUrlPatterns = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearAdsUrlPatterns = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasAdsUrlPatterns = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional StringIdOrValueProto reverse_geocoder_url = 7;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getReverseGeocoderUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 7));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setReverseGeocoderUrl = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearReverseGeocoderUrl = function() {
  this.setReverseGeocoderUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasReverseGeocoderUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 reverse_geocoder_protocol_version = 8;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getReverseGeocoderProtocolVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 3));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setReverseGeocoderProtocolVersion = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearReverseGeocoderProtocolVersion = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasReverseGeocoderProtocolVersion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool sky_database_is_available = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSkyDatabaseIsAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, true));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSkyDatabaseIsAvailable = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSkyDatabaseIsAvailable = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSkyDatabaseIsAvailable = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional StringIdOrValueProto sky_database_url = 10;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSkyDatabaseUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 10));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSkyDatabaseUrl = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSkyDatabaseUrl = function() {
  this.setSkyDatabaseUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSkyDatabaseUrl = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional StringIdOrValueProto default_web_page_intl_url = 11;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDefaultWebPageIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 11));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDefaultWebPageIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDefaultWebPageIntlUrl = function() {
  this.setDefaultWebPageIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDefaultWebPageIntlUrl = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 num_start_up_tips = 12;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getNumStartUpTips = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 17));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setNumStartUpTips = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearNumStartUpTips = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasNumStartUpTips = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional StringIdOrValueProto start_up_tips_url = 13;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getStartUpTipsUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 13));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setStartUpTipsUrl = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearStartUpTipsUrl = function() {
  this.setStartUpTipsUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasStartUpTipsUrl = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int32 num_pro_start_up_tips = 51;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getNumProStartUpTips = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 51, 0));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setNumProStartUpTips = function(value) {
  jspb.Message.setField(this, 51, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearNumProStartUpTips = function() {
  jspb.Message.setField(this, 51, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasNumProStartUpTips = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional StringIdOrValueProto pro_start_up_tips_url = 52;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getProStartUpTipsUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 52));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setProStartUpTipsUrl = function(value) {
  jspb.Message.setWrapperField(this, 52, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearProStartUpTipsUrl = function() {
  this.setProStartUpTipsUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasProStartUpTipsUrl = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional StringIdOrValueProto startup_tips_intl_url = 64;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getStartupTipsIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 64));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setStartupTipsIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 64, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearStartupTipsIntlUrl = function() {
  this.setStartupTipsIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasStartupTipsIntlUrl = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional StringIdOrValueProto user_guide_intl_url = 14;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getUserGuideIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 14));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setUserGuideIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearUserGuideIntlUrl = function() {
  this.setUserGuideIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasUserGuideIntlUrl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional StringIdOrValueProto support_center_intl_url = 15;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSupportCenterIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 15));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSupportCenterIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSupportCenterIntlUrl = function() {
  this.setSupportCenterIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSupportCenterIntlUrl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional StringIdOrValueProto business_listing_intl_url = 16;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getBusinessListingIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 16));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setBusinessListingIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearBusinessListingIntlUrl = function() {
  this.setBusinessListingIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasBusinessListingIntlUrl = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional StringIdOrValueProto support_answer_intl_url = 17;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSupportAnswerIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 17));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSupportAnswerIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSupportAnswerIntlUrl = function() {
  this.setSupportAnswerIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSupportAnswerIntlUrl = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional StringIdOrValueProto support_topic_intl_url = 18;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSupportTopicIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 18));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSupportTopicIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSupportTopicIntlUrl = function() {
  this.setSupportTopicIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSupportTopicIntlUrl = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional StringIdOrValueProto support_request_intl_url = 19;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSupportRequestIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 19));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSupportRequestIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSupportRequestIntlUrl = function() {
  this.setSupportRequestIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSupportRequestIntlUrl = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional StringIdOrValueProto earth_intl_url = 20;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getEarthIntlUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 20));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setEarthIntlUrl = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearEarthIntlUrl = function() {
  this.setEarthIntlUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasEarthIntlUrl = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional StringIdOrValueProto add_content_url = 21;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getAddContentUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 21));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setAddContentUrl = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearAddContentUrl = function() {
  this.setAddContentUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasAddContentUrl = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional StringIdOrValueProto sketchup_not_installed_url = 22;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSketchupNotInstalledUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 22));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSketchupNotInstalledUrl = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSketchupNotInstalledUrl = function() {
  this.setSketchupNotInstalledUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSketchupNotInstalledUrl = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional StringIdOrValueProto sketchup_error_url = 23;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSketchupErrorUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 23));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSketchupErrorUrl = function(value) {
  jspb.Message.setWrapperField(this, 23, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSketchupErrorUrl = function() {
  this.setSketchupErrorUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSketchupErrorUrl = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional StringIdOrValueProto free_license_url = 24;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getFreeLicenseUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 24));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setFreeLicenseUrl = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearFreeLicenseUrl = function() {
  this.setFreeLicenseUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasFreeLicenseUrl = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional StringIdOrValueProto pro_license_url = 25;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getProLicenseUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 25));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setProLicenseUrl = function(value) {
  jspb.Message.setWrapperField(this, 25, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearProLicenseUrl = function() {
  this.setProLicenseUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasProLicenseUrl = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional StringIdOrValueProto tutorial_url = 48;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getTutorialUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 48));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setTutorialUrl = function(value) {
  jspb.Message.setWrapperField(this, 48, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearTutorialUrl = function() {
  this.setTutorialUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasTutorialUrl = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional StringIdOrValueProto keyboard_shortcuts_url = 49;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getKeyboardShortcutsUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 49));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setKeyboardShortcutsUrl = function(value) {
  jspb.Message.setWrapperField(this, 49, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearKeyboardShortcutsUrl = function() {
  this.setKeyboardShortcutsUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasKeyboardShortcutsUrl = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional StringIdOrValueProto release_notes_url = 50;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getReleaseNotesUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 50));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setReleaseNotesUrl = function(value) {
  jspb.Message.setWrapperField(this, 50, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearReleaseNotesUrl = function() {
  this.setReleaseNotesUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasReleaseNotesUrl = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional bool hide_user_data = 26;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getHideUserData = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 26, false));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setHideUserData = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearHideUserData = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasHideUserData = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bool use_ge_logo = 27;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getUseGeLogo = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 27, true));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setUseGeLogo = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearUseGeLogo = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasUseGeLogo = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional StringIdOrValueProto diorama_description_url_base = 28;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDioramaDescriptionUrlBase = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 28));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDioramaDescriptionUrlBase = function(value) {
  jspb.Message.setWrapperField(this, 28, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDioramaDescriptionUrlBase = function() {
  this.setDioramaDescriptionUrlBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDioramaDescriptionUrlBase = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 diorama_default_color = 29;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDioramaDefaultColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, -3685689));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDioramaDefaultColor = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDioramaDefaultColor = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDioramaDefaultColor = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional StringIdOrValueProto diorama_blacklist_url = 53;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDioramaBlacklistUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 53));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDioramaBlacklistUrl = function(value) {
  jspb.Message.setWrapperField(this, 53, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDioramaBlacklistUrl = function() {
  this.setDioramaBlacklistUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDioramaBlacklistUrl = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional ClientOptionsProto client_options = 30;
 * @return {?proto.keyhole.dbroot.ClientOptionsProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getClientOptions = function() {
  return /** @type{?proto.keyhole.dbroot.ClientOptionsProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.ClientOptionsProto, 30));
};


/** @param {?proto.keyhole.dbroot.ClientOptionsProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setClientOptions = function(value) {
  jspb.Message.setWrapperField(this, 30, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearClientOptions = function() {
  this.setClientOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasClientOptions = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional FetchingOptionsProto fetching_options = 31;
 * @return {?proto.keyhole.dbroot.FetchingOptionsProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getFetchingOptions = function() {
  return /** @type{?proto.keyhole.dbroot.FetchingOptionsProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.FetchingOptionsProto, 31));
};


/** @param {?proto.keyhole.dbroot.FetchingOptionsProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setFetchingOptions = function(value) {
  jspb.Message.setWrapperField(this, 31, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearFetchingOptions = function() {
  this.setFetchingOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasFetchingOptions = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional TimeMachineOptionsProto time_machine_options = 32;
 * @return {?proto.keyhole.dbroot.TimeMachineOptionsProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getTimeMachineOptions = function() {
  return /** @type{?proto.keyhole.dbroot.TimeMachineOptionsProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.TimeMachineOptionsProto, 32));
};


/** @param {?proto.keyhole.dbroot.TimeMachineOptionsProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setTimeMachineOptions = function(value) {
  jspb.Message.setWrapperField(this, 32, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearTimeMachineOptions = function() {
  this.setTimeMachineOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasTimeMachineOptions = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional CSIOptionsProto csi_options = 33;
 * @return {?proto.keyhole.dbroot.CSIOptionsProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getCsiOptions = function() {
  return /** @type{?proto.keyhole.dbroot.CSIOptionsProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.CSIOptionsProto, 33));
};


/** @param {?proto.keyhole.dbroot.CSIOptionsProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setCsiOptions = function(value) {
  jspb.Message.setWrapperField(this, 33, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearCsiOptions = function() {
  this.setCsiOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasCsiOptions = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * repeated SearchTabProto search_tab = 34;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.SearchTabProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSearchTabList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.SearchTabProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.SearchTabProto, 34));
};


/** @param {!Array.<!proto.keyhole.dbroot.SearchTabProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSearchTabList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 34, value);
};


/**
 * @param {!proto.keyhole.dbroot.SearchTabProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.SearchTabProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addSearchTab = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 34, opt_value, proto.keyhole.dbroot.SearchTabProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSearchTabList = function() {
  this.setSearchTabList([]);
};


/**
 * repeated CobrandProto cobrand_info = 35;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.CobrandProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getCobrandInfoList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.CobrandProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.CobrandProto, 35));
};


/** @param {!Array.<!proto.keyhole.dbroot.CobrandProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setCobrandInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 35, value);
};


/**
 * @param {!proto.keyhole.dbroot.CobrandProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.CobrandProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addCobrandInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 35, opt_value, proto.keyhole.dbroot.CobrandProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearCobrandInfoList = function() {
  this.setCobrandInfoList([]);
};


/**
 * repeated DatabaseDescriptionProto valid_database = 36;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.DatabaseDescriptionProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getValidDatabaseList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.DatabaseDescriptionProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.DatabaseDescriptionProto, 36));
};


/** @param {!Array.<!proto.keyhole.dbroot.DatabaseDescriptionProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setValidDatabaseList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 36, value);
};


/**
 * @param {!proto.keyhole.dbroot.DatabaseDescriptionProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.DatabaseDescriptionProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addValidDatabase = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 36, opt_value, proto.keyhole.dbroot.DatabaseDescriptionProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearValidDatabaseList = function() {
  this.setValidDatabaseList([]);
};


/**
 * repeated ConfigScriptProto config_script = 37;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.ConfigScriptProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getConfigScriptList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.ConfigScriptProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.ConfigScriptProto, 37));
};


/** @param {!Array.<!proto.keyhole.dbroot.ConfigScriptProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setConfigScriptList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 37, value);
};


/**
 * @param {!proto.keyhole.dbroot.ConfigScriptProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.ConfigScriptProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addConfigScript = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 37, opt_value, proto.keyhole.dbroot.ConfigScriptProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearConfigScriptList = function() {
  this.setConfigScriptList([]);
};


/**
 * optional StringIdOrValueProto deauth_server_url = 38;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDeauthServerUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 38));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDeauthServerUrl = function(value) {
  jspb.Message.setWrapperField(this, 38, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDeauthServerUrl = function() {
  this.setDeauthServerUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDeauthServerUrl = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional SwoopParamsProto swoop_parameters = 39;
 * @return {?proto.keyhole.dbroot.SwoopParamsProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSwoopParameters = function() {
  return /** @type{?proto.keyhole.dbroot.SwoopParamsProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.SwoopParamsProto, 39));
};


/** @param {?proto.keyhole.dbroot.SwoopParamsProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSwoopParameters = function(value) {
  jspb.Message.setWrapperField(this, 39, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSwoopParameters = function() {
  this.setSwoopParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSwoopParameters = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional PostingServerProto bbs_server_info = 40;
 * @return {?proto.keyhole.dbroot.PostingServerProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getBbsServerInfo = function() {
  return /** @type{?proto.keyhole.dbroot.PostingServerProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.PostingServerProto, 40));
};


/** @param {?proto.keyhole.dbroot.PostingServerProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setBbsServerInfo = function(value) {
  jspb.Message.setWrapperField(this, 40, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearBbsServerInfo = function() {
  this.setBbsServerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasBbsServerInfo = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional PostingServerProto data_error_server_info = 41;
 * @return {?proto.keyhole.dbroot.PostingServerProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDataErrorServerInfo = function() {
  return /** @type{?proto.keyhole.dbroot.PostingServerProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.PostingServerProto, 41));
};


/** @param {?proto.keyhole.dbroot.PostingServerProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDataErrorServerInfo = function(value) {
  jspb.Message.setWrapperField(this, 41, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDataErrorServerInfo = function() {
  this.setDataErrorServerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDataErrorServerInfo = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * repeated PlanetaryDatabaseProto planetary_database = 42;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.PlanetaryDatabaseProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getPlanetaryDatabaseList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.PlanetaryDatabaseProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.PlanetaryDatabaseProto, 42));
};


/** @param {!Array.<!proto.keyhole.dbroot.PlanetaryDatabaseProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setPlanetaryDatabaseList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 42, value);
};


/**
 * @param {!proto.keyhole.dbroot.PlanetaryDatabaseProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.PlanetaryDatabaseProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addPlanetaryDatabase = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 42, opt_value, proto.keyhole.dbroot.PlanetaryDatabaseProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearPlanetaryDatabaseList = function() {
  this.setPlanetaryDatabaseList([]);
};


/**
 * optional LogServerProto log_server = 43;
 * @return {?proto.keyhole.dbroot.LogServerProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getLogServer = function() {
  return /** @type{?proto.keyhole.dbroot.LogServerProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.LogServerProto, 43));
};


/** @param {?proto.keyhole.dbroot.LogServerProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setLogServer = function(value) {
  jspb.Message.setWrapperField(this, 43, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearLogServer = function() {
  this.setLogServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasLogServer = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional AutopiaOptionsProto autopia_options = 44;
 * @return {?proto.keyhole.dbroot.AutopiaOptionsProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getAutopiaOptions = function() {
  return /** @type{?proto.keyhole.dbroot.AutopiaOptionsProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.AutopiaOptionsProto, 44));
};


/** @param {?proto.keyhole.dbroot.AutopiaOptionsProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setAutopiaOptions = function(value) {
  jspb.Message.setWrapperField(this, 44, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearAutopiaOptions = function() {
  this.setAutopiaOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasAutopiaOptions = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional SearchConfigProto search_config = 54;
 * @return {?proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSearchConfig = function() {
  return /** @type{?proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto, 54));
};


/** @param {?proto.keyhole.dbroot.EndSnippetProto.SearchConfigProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSearchConfig = function(value) {
  jspb.Message.setWrapperField(this, 54, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSearchConfig = function() {
  this.setSearchConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSearchConfig = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional SearchInfoProto search_info = 45;
 * @return {?proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSearchInfo = function() {
  return /** @type{?proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto, 45));
};


/** @param {?proto.keyhole.dbroot.EndSnippetProto.SearchInfoProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSearchInfo = function(value) {
  jspb.Message.setWrapperField(this, 45, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSearchInfo = function() {
  this.setSearchInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSearchInfo = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional string elevation_service_base_url = 46;
 * @return {string}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getElevationServiceBaseUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, "http://maps.google.com/maps/api/elevation/"));
};


/** @param {string} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setElevationServiceBaseUrl = function(value) {
  jspb.Message.setField(this, 46, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearElevationServiceBaseUrl = function() {
  jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasElevationServiceBaseUrl = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional int32 elevation_profile_query_delay = 47;
 * @return {number}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getElevationProfileQueryDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 500));
};


/** @param {number} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setElevationProfileQueryDelay = function(value) {
  jspb.Message.setField(this, 47, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearElevationProfileQueryDelay = function() {
  jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasElevationProfileQueryDelay = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional StringIdOrValueProto pro_upgrade_url = 55;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getProUpgradeUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 55));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setProUpgradeUrl = function(value) {
  jspb.Message.setWrapperField(this, 55, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearProUpgradeUrl = function() {
  this.setProUpgradeUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasProUpgradeUrl = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional StringIdOrValueProto earth_community_url = 56;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getEarthCommunityUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 56));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setEarthCommunityUrl = function(value) {
  jspb.Message.setWrapperField(this, 56, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearEarthCommunityUrl = function() {
  this.setEarthCommunityUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasEarthCommunityUrl = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional StringIdOrValueProto google_maps_url = 57;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getGoogleMapsUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 57));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setGoogleMapsUrl = function(value) {
  jspb.Message.setWrapperField(this, 57, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearGoogleMapsUrl = function() {
  this.setGoogleMapsUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasGoogleMapsUrl = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional StringIdOrValueProto sharing_url = 58;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getSharingUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 58));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setSharingUrl = function(value) {
  jspb.Message.setWrapperField(this, 58, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearSharingUrl = function() {
  this.setSharingUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasSharingUrl = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional StringIdOrValueProto privacy_policy_url = 59;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getPrivacyPolicyUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 59));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setPrivacyPolicyUrl = function(value) {
  jspb.Message.setWrapperField(this, 59, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearPrivacyPolicyUrl = function() {
  this.setPrivacyPolicyUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasPrivacyPolicyUrl = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional bool do_gplus_user_check = 60;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getDoGplusUserCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 60, false));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setDoGplusUserCheck = function(value) {
  jspb.Message.setField(this, 60, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearDoGplusUserCheck = function() {
  jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasDoGplusUserCheck = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional RockTreeDataProto rocktree_data_proto = 61;
 * @return {?proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getRocktreeDataProto = function() {
  return /** @type{?proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto, 61));
};


/** @param {?proto.keyhole.dbroot.EndSnippetProto.RockTreeDataProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setRocktreeDataProto = function(value) {
  jspb.Message.setWrapperField(this, 61, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearRocktreeDataProto = function() {
  this.setRocktreeDataProto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasRocktreeDataProto = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * repeated FilmstripConfigProto filmstrip_config = 62;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto>}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getFilmstripConfigList = function() {
  return /** @type{!Array.<!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto, 62));
};


/** @param {!Array.<!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto>} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setFilmstripConfigList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 62, value);
};


/**
 * @param {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.addFilmstripConfig = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 62, opt_value, proto.keyhole.dbroot.EndSnippetProto.FilmstripConfigProto, opt_index);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearFilmstripConfigList = function() {
  this.setFilmstripConfigList([]);
};


/**
 * optional bool show_signin_button = 63;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getShowSigninButton = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 63, false));
};


/** @param {boolean} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setShowSigninButton = function(value) {
  jspb.Message.setField(this, 63, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearShowSigninButton = function() {
  jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasShowSigninButton = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional StringIdOrValueProto pro_measure_upsell_url = 65;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getProMeasureUpsellUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 65));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setProMeasureUpsellUrl = function(value) {
  jspb.Message.setWrapperField(this, 65, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearProMeasureUpsellUrl = function() {
  this.setProMeasureUpsellUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasProMeasureUpsellUrl = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional StringIdOrValueProto pro_print_upsell_url = 66;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getProPrintUpsellUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 66));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setProPrintUpsellUrl = function(value) {
  jspb.Message.setWrapperField(this, 66, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearProPrintUpsellUrl = function() {
  this.setProPrintUpsellUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasProPrintUpsellUrl = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional StarDataProto star_data_proto = 67;
 * @return {?proto.keyhole.dbroot.EndSnippetProto.StarDataProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getStarDataProto = function() {
  return /** @type{?proto.keyhole.dbroot.EndSnippetProto.StarDataProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.EndSnippetProto.StarDataProto, 67));
};


/** @param {?proto.keyhole.dbroot.EndSnippetProto.StarDataProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setStarDataProto = function(value) {
  jspb.Message.setWrapperField(this, 67, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearStarDataProto = function() {
  this.setStarDataProto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasStarDataProto = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional StringIdOrValueProto feedback_url = 68;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getFeedbackUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 68));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setFeedbackUrl = function(value) {
  jspb.Message.setWrapperField(this, 68, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearFeedbackUrl = function() {
  this.setFeedbackUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasFeedbackUrl = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional StringIdOrValueProto oauth2_login_url = 69;
 * @return {?proto.keyhole.dbroot.StringIdOrValueProto}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.getOauth2LoginUrl = function() {
  return /** @type{?proto.keyhole.dbroot.StringIdOrValueProto} */ (
    jspb.Message.getWrapperField(this, proto.keyhole.dbroot.StringIdOrValueProto, 69));
};


/** @param {?proto.keyhole.dbroot.StringIdOrValueProto|undefined} value */
proto.keyhole.dbroot.EndSnippetProto.prototype.setOauth2LoginUrl = function(value) {
  jspb.Message.setWrapperField(this, 69, value);
};


proto.keyhole.dbroot.EndSnippetProto.prototype.clearOauth2LoginUrl = function() {
  this.setOauth2LoginUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.keyhole.dbroot.EndSnippetProto.prototype.hasOauth2LoginUrl = function() {
  return jspb.Message.getField(this, 69) != null;
};


